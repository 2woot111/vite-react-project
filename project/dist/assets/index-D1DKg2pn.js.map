{"version":3,"file":"index-D1DKg2pn.js","sources":["../../node_modules/react/cjs/react-jsx-runtime.production.min.js","../../node_modules/react/jsx-runtime.js","../../node_modules/react-dom/client.js","../../src/pages/LandingPage.tsx","../../src/lib/supabase.ts","../../src/components/ApplicationForm.tsx","../../src/pages/SuccessPage.tsx","../../src/pages/RejectionPage.tsx","../../src/App.tsx","../../src/main.tsx"],"sourcesContent":["/**\n * @license React\n * react-jsx-runtime.production.min.js\n *\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n'use strict';var f=require(\"react\"),k=Symbol.for(\"react.element\"),l=Symbol.for(\"react.fragment\"),m=Object.prototype.hasOwnProperty,n=f.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED.ReactCurrentOwner,p={key:!0,ref:!0,__self:!0,__source:!0};\nfunction q(c,a,g){var b,d={},e=null,h=null;void 0!==g&&(e=\"\"+g);void 0!==a.key&&(e=\"\"+a.key);void 0!==a.ref&&(h=a.ref);for(b in a)m.call(a,b)&&!p.hasOwnProperty(b)&&(d[b]=a[b]);if(c&&c.defaultProps)for(b in a=c.defaultProps,a)void 0===d[b]&&(d[b]=a[b]);return{$$typeof:k,type:c,key:e,ref:h,props:d,_owner:n.current}}exports.Fragment=l;exports.jsx=q;exports.jsxs=q;\n","'use strict';\n\nif (process.env.NODE_ENV === 'production') {\n  module.exports = require('./cjs/react-jsx-runtime.production.min.js');\n} else {\n  module.exports = require('./cjs/react-jsx-runtime.development.js');\n}\n","'use strict';\n\nvar m = require('react-dom');\nif (process.env.NODE_ENV === 'production') {\n  exports.createRoot = m.createRoot;\n  exports.hydrateRoot = m.hydrateRoot;\n} else {\n  var i = m.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED;\n  exports.createRoot = function(c, o) {\n    i.usingClientEntryPoint = true;\n    try {\n      return m.createRoot(c, o);\n    } finally {\n      i.usingClientEntryPoint = false;\n    }\n  };\n  exports.hydrateRoot = function(c, h, o) {\n    i.usingClientEntryPoint = true;\n    try {\n      return m.hydrateRoot(c, h, o);\n    } finally {\n      i.usingClientEntryPoint = false;\n    }\n  };\n}\n","import { useNavigate } from 'react-router-dom'\nimport '../styles/LandingPage.css'\n\nconst LandingPage = () => {\n  const navigate = useNavigate()\n\n  return (\n    <main>\n      <nav>\n        <a href=\"https://augustlearn.com/\" className=\"brand\">August</a>\n      </nav>\n      \n      <div className=\"hero\">\n        <h1>Welcome to August</h1>\n        <p className=\"mission\">\n          Are you ready to join Yale and 50+ university ambassadors on a mission to decentralize college admissions for all?\n        </p>\n        <button className=\"cta\" onClick={() => navigate('/apply')}>\n          Apply Today\n        </button>\n      </div>\n\n      <footer>\n        <div className=\"marquee\">\n          <div className=\"marquee-content\">\n            <span>Yale</span>\n            <span>Harvard</span>\n            <span>Columbia</span>\n            <span>Princeton</span>\n            <span>Stanford</span>\n            <span>MIT</span>\n            <span>UPenn</span>\n            <span>Dartmouth</span>\n            <span>Brown</span>\n            <span>Cornell</span>\n            <span>Duke</span>\n            <span>Northwestern</span>\n            <span>Johns Hopkins</span>\n            <span>Vanderbilt</span>\n            <span>Rice</span>\n            <span>Berkeley</span>\n            <span>UCLA</span>\n            <span>USC</span>\n            <span>Georgetown</span>\n            <span>Carnegie Mellon</span>\n            <span>NYU</span>\n            <span>Tufts</span>\n            <span>Michigan</span>\n            <span>UVA</span>\n            <span>Notre Dame</span>\n          </div>\n          <div className=\"marquee-content\" aria-hidden=\"true\">\n            <span>Yale</span>\n            <span>Harvard</span>\n            <span>Columbia</span>\n            <span>Princeton</span>\n            <span>Stanford</span>\n            <span>MIT</span>\n            <span>UPenn</span>\n            <span>Dartmouth</span>\n            <span>Brown</span>\n            <span>Cornell</span>\n            <span>Duke</span>\n            <span>Northwestern</span>\n            <span>Johns Hopkins</span>\n            <span>Vanderbilt</span>\n            <span>Rice</span>\n            <span>Berkeley</span>\n            <span>UCLA</span>\n            <span>USC</span>\n            <span>Georgetown</span>\n            <span>Carnegie Mellon</span>\n            <span>NYU</span>\n            <span>Tufts</span>\n            <span>Michigan</span>\n            <span>UVA</span>\n            <span>Notre Dame</span>\n          </div>\n        </div>\n      </footer>\n    </main>\n  )\n}\n\nexport default LandingPage","import { createClient } from '@supabase/supabase-js'\nimport type { Database } from '../types/supabase'\n\nif (!import.meta.env.VITE_SUPABASE_URL || !import.meta.env.VITE_SUPABASE_ANON_KEY) {\n  throw new Error('Missing Supabase environment variables')\n}\n\nconst supabaseUrl = import.meta.env.VITE_SUPABASE_URL\nconst supabaseKey = import.meta.env.VITE_SUPABASE_ANON_KEY\n\nexport const supabase = createClient<Database>(supabaseUrl, supabaseKey)","import React, { useState } from 'react'\nimport { useNavigate } from 'react-router-dom'\nimport { supabase } from '../lib/supabase'\n\ntype Step = {\n  id: number\n  title: string\n  emoji: string\n}\n\nconst steps: Step[] = [\n  { id: 1, title: \"Current Status\" },\n  { id: 2, title: \"Student List\" },\n  { id: 3, title: \"Admissions Contact\" },\n  { id: 4, title: \"Response Speed\" },\n  { id: 5, title: \"Final Step\" }\n]\n\nexport default function ApplicationForm() {\n  const navigate = useNavigate()\n  const [currentStep, setCurrentStep] = useState(1)\n  const [isProcessing, setIsProcessing] = useState(false)\n  const [formData, setFormData] = useState({\n   name: '',\n    is_undergraduate: false,\n    current_year: null as number | null,\n    major: '',\n    can_access_student_list: false,\n    student_list_confidence: null as number | null,\n    has_admissions_contact: false,\n    admissions_contact_confidence: null as number | null,\n    response_speed: 0\n  })\n\n  const handleNext = async () => {\n    if (currentStep === 5) {\n      setIsProcessing(true)\n      try {\n        // Validate required fields\n        if (!formData.name.trim()) {\n          throw new Error('Name is required')\n        }\n\n        if (!formData.is_undergraduate) {\n          throw new Error('Must be an undergraduate student')\n        }\n\n        if (formData.is_undergraduate && !formData.current_year) {\n          throw new Error('Graduation year is required')\n        }\n\n        if (formData.is_undergraduate && !formData.major?.trim()) {\n          throw new Error('Major is required')\n        }\n\n        // Check if all requirements are met\n        const meetsRequirements = \n          formData.is_undergraduate &&\n          formData.can_access_student_list &&\n          (formData.student_list_confidence ?? 0) > 6 &&\n          formData.has_admissions_contact &&\n          (formData.admissions_contact_confidence ?? 0) > 6 &&\n          formData.response_speed > 6\n\n        if (meetsRequirements) {\n          // Save to Supabase\n          const userId = localStorage.getItem('bolt_user_id') || crypto.randomUUID()\n          if (!localStorage.getItem('bolt_user_id')) {\n            localStorage.setItem('bolt_user_id', userId)\n          }\n\n          const { error } = await supabase\n            .from('applications')\n            .insert([{ ...formData, user_id: userId }])\n\n          if (error) {\n            throw new Error(`Failed to save application: ${error.message}`)\n          }\n\n          navigate('/success')\n        } else {\n          navigate('/rejection')\n        }\n      } catch (error) {\n        setIsProcessing(false)\n        alert((error as Error).message)\n        return\n      }\n    } else {\n      setCurrentStep(prev => prev + 1)\n    }\n  }\n\n  const handlePrevious = () => {\n    if (currentStep > 1) {\n      setCurrentStep(prev => prev - 1)\n    }\n  }\n\n  const renderStep = () => {\n    switch (currentStep) {\n      case 1:\n        return (\n          <div className=\"step-content\">\n           <h2>What's your name? {steps[0].emoji}</h2>\n           <input\n             type=\"text\"\n             value={formData.name}\n             onChange={(e) => setFormData(prev => ({\n               ...prev,\n               name: e.target.value\n             }))}\n             className=\"text-input\"\n             placeholder=\"Enter your full name\"\n             required\n           />\n\n            <h2>Are you a current undergraduate? {steps[0].emoji}</h2>\n            <select \n              value={formData.is_undergraduate.toString()}\n              onChange={(e) => {\n                const value = e.target.value === 'true'\n                setFormData(prev => ({\n                  ...prev,\n                  is_undergraduate: value,\n                  current_year: value ? prev.current_year : null,\n                  major: value ? prev.major : ''\n                }))\n              }}\n              className=\"select-input\"\n            >\n              <option value=\"false\">No</option>\n              <option value=\"true\">Yes</option>\n            </select>\n\n            {formData.is_undergraduate && (\n              <>\n                <h3>Please select your current year:</h3>\n                <select\n                  value={formData.current_year?.toString() || ''}\n                  onChange={(e) => setFormData(prev => ({\n                    ...prev,\n                    current_year: parseInt(e.target.value)\n                  }))}\n                  className=\"select-input\"\n                >\n                  <option value=\"\">Select year</option>\n                  <option value=\"2025\">2025</option>\n                  <option value=\"2026\">2026</option>\n                  <option value=\"2027\">2027</option>\n                  <option value=\"2028\">2028</option>\n                </select>\n\n                <h3>Please enter your major:</h3>\n                <input\n                  type=\"text\"\n                  value={formData.major}\n                  onChange={(e) => setFormData(prev => ({\n                    ...prev,\n                    major: e.target.value\n                  }))}\n                  className=\"text-input\"\n                  placeholder=\"Enter your major\"\n                />\n              </>\n            )}\n          </div>\n        )\n\n      case 2:\n        return (\n          <div className=\"step-content\">\n            <h2>Student List Access {steps[1].emoji}</h2>\n            <p>Can you access or curate a list of 500-1000 students at your university?</p>\n            <p className=\"description-note\">\n              For example, having access to or ability to legally scrape student contacts (.edu emails) from sources like yalies.io\n            </p>\n            <select\n              value={formData.can_access_student_list.toString()}\n              onChange={(e) => {\n                const value = e.target.value === 'true'\n                setFormData(prev => ({\n                  ...prev,\n                  can_access_student_list: value,\n                  student_list_confidence: value ? prev.student_list_confidence : null\n                }))\n              }}\n              className=\"select-input\"\n            >\n              <option value=\"false\">No</option>\n              <option value=\"true\">Yes</option>\n            </select>\n\n            {formData.can_access_student_list && (\n              <>\n                <h3>Rate your ability to scrape your school's emails regularly:</h3>\n                <input\n                  type=\"range\"\n                  min=\"1\"\n                  max=\"10\"\n                  value={formData.student_list_confidence || 1}\n                  onChange={(e) => setFormData(prev => ({\n                    ...prev,\n                    student_list_confidence: parseInt(e.target.value)\n                  }))}\n                  className=\"range-input\"\n                />\n                <div className=\"range-labels\">\n                  <span>Not likely</span>\n                  <span>Very confident</span>\n                </div>\n              </>\n            )}\n          </div>\n        )\n\n      case 3:\n        return (\n          <div className=\"step-content\">\n            <h2>Admissions Contact {steps[2].emoji}</h2>\n            <p>Do you have access to warm contact info of a key admissions decision maker?</p>\n            <p className=\"description-note\">\n              For example, having a connection with your former principal or a current admissions officer\n            </p>\n            <select\n              value={formData.has_admissions_contact.toString()}\n              onChange={(e) => {\n                const value = e.target.value === 'true'\n                setFormData(prev => ({\n                  ...prev,\n                  has_admissions_contact: value,\n                  admissions_contact_confidence: value ? prev.admissions_contact_confidence : null\n                }))\n              }}\n              className=\"select-input\"\n            >\n              <option value=\"false\">No</option>\n              <option value=\"true\">Yes</option>\n            </select>\n\n            {formData.has_admissions_contact && (\n              <>\n                <h3>How confident are you in getting a prompt response?</h3>\n                <input\n                  type=\"range\"\n                  min=\"1\"\n                  max=\"10\"\n                  value={formData.admissions_contact_confidence || 1}\n                  onChange={(e) => setFormData(prev => ({\n                    ...prev,\n                    admissions_contact_confidence: parseInt(e.target.value)\n                  }))}\n                  className=\"range-input\"\n                />\n                <div className=\"range-labels\">\n                  <span>Not likely</span>\n                  <span>Very confident</span>\n                </div>\n              </>\n            )}\n          </div>\n        )\n\n      case 4:\n        return (\n          <div className=\"step-content\">\n            <h2>Response Speed</h2>\n            <p>How fast could you connect with that decision maker?</p>\n            <p className=\"description-note\">\n              A rating of 10 would mean you live next to your old principal\n            </p>\n            <input\n              type=\"range\"\n              min=\"1\"\n              max=\"10\"\n              value={formData.response_speed}\n              onChange={(e) => setFormData(prev => ({\n                ...prev,\n                response_speed: parseInt(e.target.value)\n              }))}\n              className=\"range-input\"\n            />\n            <div className=\"range-labels\">\n              <span>Slow</span>\n              <span>Very fast</span>\n            </div>\n          </div>\n        )\n\n      case 5:\n        return (\n          <div className=\"step-content\">\n            <div className=\"final-step\">\n              <h2>Final Step {steps[4].emoji}</h2>\n              {isProcessing ? (\n                <div className=\"loading\">\n                  <div className=\"spinner\"></div>\n                  <p>Processing your application...</p>\n                  <p className=\"processing-note\">This may take a few moments</p>\n                </div>\n              ) : (\n                <div className=\"submission-ready\">\n                  <p>Ready to submit your application?</p>\n                  <p className=\"submission-note\">Click submit to finalize your application</p>\n                </div>\n              )}\n            </div>\n          </div>\n        )\n\n      default:\n        return null\n    }\n  }\n\n  return (\n    <div className=\"application-form\">\n      <div \n        className=\"progress-bar\" \n        style={{ '--current-step': currentStep } as React.CSSProperties} \n      />\n\n      {renderStep()}\n\n      <div className=\"navigation-buttons\">\n        {currentStep > 1 && (\n          <button onClick={handlePrevious} className=\"btn-previous\">\n            Previous\n          </button>\n        )}\n        <button onClick={handleNext} className=\"btn-next\">\n          {currentStep === 5 ? 'Submit' : 'Next'}\n        </button>\n      </div>\n    </div>\n  )\n}","import React from 'react'\nimport '../styles/SuccessPage.css'\n\nexport default function SuccessPage() {\n  return (\n    <main className=\"success-page\">\n      <div className=\"content\">\n        <div className=\"success-header\">\n          <h1>Congratulations! 🎉</h1>\n          <p className=\"subtitle\">You're a perfect fit for our mission</p>\n        </div>\n        \n        <div className=\"next-steps\">\n          <h2>Next Steps:</h2>\n          <ol>\n            <li>Book your interview below</li>\n            <li>Prepare your student list strategy</li>\n            <li>Review admissions contact details</li>\n          </ol>\n        </div>\n\n        <div className=\"booking-section\">\n          <p className=\"urgency\">Limited spots available - Book now!</p>\n          <a \n            href=\"https://calendly.com/seanhargrow/chat\" \n            className=\"cta-button\"\n            target=\"_blank\" \n            rel=\"noopener noreferrer\"\n          >\n            Schedule Interview\n          </a>\n          <p className=\"deadline\">Interviews must be scheduled by January 31st</p>\n        </div>\n\n        <div className=\"contact-info\">\n          <p>Questions? Contact us at <a href=\"mailto:info@augustlearn.com\">info@augustlearn.com</a></p>\n          <p className=\"social-follow\">Follow us on <a href=\"https://www.linkedin.com/company/august-learn\" target=\"_blank\" rel=\"noopener noreferrer\">LinkedIn</a> for updates on all August openings!</p>\n        </div>\n      </div>\n    </main>\n  )\n}","import { useNavigate } from 'react-router-dom'\nimport '../styles/RejectionPage.css'\n\nexport default function RejectionPage() {\n  const navigate = useNavigate()\n\n  return (\n    <main className=\"rejection-page\">\n      <div className=\"rejection-card\">\n        <div className=\"rejection-header\">\n          <span className=\"emoji\">🙏</span>\n          <h1>Thanks for your interest</h1>\n        </div>\n        \n        <div className=\"rejection-message\">\n          <p>\n            We appreciate you taking the time to apply. While we carefully review all applications,\n            we're currently looking for candidates who meet specific criteria for this role.\n          </p>\n          <p>\n            Feel free to reach out to <a href=\"mailto:info@augustlearn.com\">info@augustlearn.com</a> if\n            you have any questions.\n            <br />\n            Follow us on <a href=\"https://www.linkedin.com/company/august-learn\" target=\"_blank\" rel=\"noopener noreferrer\">LinkedIn</a> for updates on all August openings!\n          </p>\n        </div>\n\n        <div className=\"rejection-actions\">\n          <button \n            onClick={() => navigate('/')} \n            className=\"return-home-btn\"\n          >\n            Return Home\n          </button>\n        </div>\n      </div>\n    </main>\n  )\n}","import { BrowserRouter as Router, Routes, Route } from 'react-router-dom'\nimport LandingPage from './pages/LandingPage'\nimport ApplicationForm from './components/ApplicationForm'\nimport SuccessPage from './pages/SuccessPage'\nimport RejectionPage from './pages/RejectionPage'\nimport './styles/ApplicationForm.css'\n\n// Log Supabase URL to verify env loading\nconsole.log('Supabase URL:', import.meta.env.VITE_SUPABASE_URL)\n\nfunction App() {\n  return (\n    <Router>\n      <Routes>\n        <Route path=\"/\" element={<LandingPage />} />\n        <Route path=\"/apply\" element={<ApplicationForm />} />\n        <Route path=\"/success\" element={<SuccessPage />} />\n        <Route path=\"/rejection\" element={<RejectionPage />} />\n      </Routes>\n    </Router>\n  )\n}\n\nexport default App","import React from 'react'\nimport ReactDOM from 'react-dom/client'\nimport App from './App'\nimport './index.css'\n\nReactDOM.createRoot(document.getElementById('root')!).render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n)"],"names":["f","require$$0","k","l","m","n","p","q","c","g","b","d","e","h","reactJsxRuntime_production_min","jsxRuntimeModule","LandingPage","navigate","useNavigate","jsx","jsxs","supabaseUrl","supabaseKey","supabase","createClient","steps","ApplicationForm","currentStep","setCurrentStep","useState","isProcessing","setIsProcessing","formData","setFormData","handleNext","_a","userId","error","prev","handlePrevious","renderStep","value","Fragment","SuccessPage","RejectionPage","App","Router","Routes","Route","ReactDOM","React"],"mappings":"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","x_google_ignoreList":[0,1,2]}